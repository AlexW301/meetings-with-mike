import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.scss'
import { ApolloClient, InMemoryCache, gql, useQuery} from '@apollo/client'

export default function Home({data}) {
  const available = 0
  const pending = 2
  const completed = 1
  console.log(data)
  const items = data.data.boards[0].items
  console.log(items)
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {items.map((item) => {
        if (item.column_values[0].text !== 'Completed') {
          return (
            <div key={item.id} style={{padding: '10px', display: 'flex', gap: '20px'}}>
              <p>{item.name}</p>
              <p>{item.column_values[1].text}</p>
              <p>{item.column_values[0].text}</p>
            </div>
          )
        }
      }
      )}
    </div>
  )
}

export async function getServerSideProps() {
  // const client = new ApolloClient({
  //   uri: `https://api.monday.com/v2`,
  //   cache: new InMemoryCache(),
  //   headers: {
  //     "Content-Type": "application/json",
  //     Authorization: process.env.API_KEY,
  //   }
  // })

  // const {data} = await client.query({
  //   query: gql`
  //   query {
  //     boards (ids:2135781119) {
  //       items {
  //         name
  //         id
  //         column_values {
  //           id
  //           text
  //         }
  //       }
  //     }
  //   }
  //   `
  // })

  const graphql = JSON.stringify({
    query: "query {\r\n  boards (ids:2135781119) {\r\n    items {\r\n      id\r\n      name\r\n      column_values {\r\n        id\r\n        text\r\n      }\r\n    }\r\n  }\r\n}",
    variables: {}
  })

  const res = await fetch(`https://api.monday.com/v2`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: process.env.API_KEY,
      },
      body: graphql,
    })
    const data = await res.json();
    
  return {
    props: {
      data
    }
  }
}
